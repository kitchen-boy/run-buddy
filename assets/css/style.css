* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
/* Global Stylings Start*/
.section-title {
    /* to create font size big enough for ALL screens */
    font-size: 48px;
    color: #024e76;
    border-bottom: 3px solid;
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;
}

.primary-border {
    border-color: #fce138;
}

.secondary-border {
    border-color: #39a6b2;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.flex-row {
    display: flex;
}
/* Global Stylings End */

body {
    /* more on this crazy alphanumerical value in a minute! */
    /* I'm a CSS comment! */
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
}

/* Apply styles to <header> */
header {
    /* Applies 20px to the top & bottom, then 35px to the left & right */
    padding: 20px 35px;
    background-color: #39a6b2;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    /* Make <header> sticky */
    /* Add vendor prefix to sticky header for Safari */
    position: -webkit-sticky;
    /* Always put vendor-prefixed versions before 
    standardized (finalized) version of a property */
    position: sticky;
    top: 0px;
    /* Style header to look like part of hero section */
    background-image: url("../images/hero-bg.jpeg");
    background-size: cover;
    background-position: center;
    /* Line up background images of header & hero to be in same place */
    /* "fixed" = places image relative to viewport instead of element */
    background-attachment: fixed;
    /* set background position to better match the mock-up */
    background-position: 80%;
    /* To keep <header> element on top in stacking order */
    z-index: 9999;
}

header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
    /* Applies text-shadow property to <header> */
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

header a {
    text-decoration: none;
    color: #fce138;
}

header nav {
    margin: 7px 0;
}

header nav ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    list-style: none;
}

header nav ul li a {
    /* to create tighter nav menu */
    padding: 10px 15px;
    font-weight: lighter;
    font-size: 1.55vw;
     /* Applies text-shadow property to <header> navigation bar text */
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

/* Add hover effects to nav header */
header nav ul li a:hover {
    background: #fce138;
    color: #024e76;
    border-radius: 15px;
    text-shadow: none;
}

footer {
    background: #fce138;
    width: 100%;
    padding: 40px 35px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

footer h2 {
    color: #024e76;
    font-size: 30px;
    margin: 0;
}

footer div {
    line-height: 1.5;
    text-align: right;
}

footer a {
    color: #024e76;
}

section {
    padding: 60px;
}

/* Hero Style Start */
.hero {
    background-image: url("../images/hero-bg.jpeg");
    background-size: cover;
    background-position: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    /* css adjustment for media queries */
    align-items: flex-start;
    /* Line up background images of header & hero to be in same place */
    /* "fixed" = places image relative to viewport instead of element */
    background-attachment: fixed;
    /* set background position to better match the mock-up */
    background-position: 80%;

}

.hero-cta {
    width: 35%;
    text-align: right;
    margin: 3.5%;
    color: #fff;
    font-size: 18px;
    /* changed to make text easier to read */
    line-height: 1.2;
}

.hero-cta h2 {
    font-style: italic;
    font-size: 55px;
    color: #fce138;
    /* Applies text-shadow property to hero "Start Building Habits" title */
    text-shadow: 0 0 10px rgba (0, 0, 0, 0.5);
}

.hero-form {
    border: 3px solid #024e76;
    /* Added transparency to background color */
    background-color: rgba(252, 225, 56, 0.8);
    padding: 20px;
    color: #024e76;
    width: 40%;
    margin: 3.5%;
    /* Applies box-shadow to hero form */
    box-shadow: 0 0 10px rgba(0 0 0 0.5);
    /* Applies rounded corners to hero form */
    border-radius: 15px;
}
   
.hero-form h3 {
    font-size: 24px;
    margin: 0;
}

.hero-form p {
    margin: 5px 0 15px 0;
}

.form-input {
    border: 1px solid #024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
    /* Add rounded corners to input boxes for Hero form */
    border-radius: 10px;
    /* Makes form input's default state slightly transparent */
    background-color: rgba(255, 255, 255, 0.75);
}

/* Add :focus state to Hero input form */
.form-input:focus {
    background-color: rgba(255, 255, 255, 1);
    /* To remove blue border outline for input box that's in focus; 
    can't add a border-radius to this outline, so remove it altogether*/
    outline: none;
}

.hero-form label {
    margin: 0 5px;
}

.hero-form button {
    color: #fce138;
    background-color: #024e76;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    /* add small rounded corner to hero button */
    border-radius: 10px;
}
/* Add hover effect to Hero button */
.hero-form button:hover {
    background-color: #39a6b2;
}
/* Customize Checkboxes & Radio Buttons */
/* Pseudo-Elements to make inputs inside wrappers disapear */
/* opacity property defines transparency from 0.0-1.0; 0=invisible */
.checkbox-wrapper input, .radio-wrapper input {
    opacity: 0;
}
/* Prep <label> elements so that new buttons can fit inside */
.checkbox-wrapper label, .radio-wrapper label {
    position: relative;
    left: 10px; 
    margin: 10px;
    line-height: 1.6;
}
/* Add new buttons using CSS & pseudo-elements */
/* ::before pseudo-element allows us to inject content into label element 
before everything else that currently resides in label element */
.checkbox-wrapper label::before, .radio-wrapper label::before {
    /* content property is left empty */
    content: "";
    /* create white square with blue border */
    height: 20px;
    width: 20px;
    background: rgba(255, 255, 255, 0.75);
    border: 1px solid #024e76;
    /* absolute positioning to move box 
    on top of invisible, original input element */
    position: absolute;
    top: -4px;
    left: -30px;
}
/* Make new radio buttons round */
.radio-wrapper label::before {
    border-radius: 50%;
}
/* use <::after> pseudo-element 
to define how buttons display when checked or clicked */
.radio-wrapper label::after {
    content: "";
    /* created a colored circle for the radio buttons */
    width: 20px;
    height: 20px;
    border-radius: 50%;
    position: absolute;
    left: -29px;
    top: -3px;
    /* replace solid background colour with a gradient */
    background-image: radial-gradient(circle, #39a6b2, #024e76);
}
.checkbox-wrapper label::after {
    content: "";
    /* created weird L-shaped thingy for checkbox
    i.e. a rectangle that only has 2 borders = looks like an L */ 
    height: 6px;
    width: 14px;
    border-left: 2px solid #024e76;
    border-bottom: 2px solid #024e76;
    position: absolute;
    left: -26px;
    top: 1px;
    /* to rotate L-shaped thingy to make it look more like a checkmark */
    transform: rotate(-58deg);
}
/* When <label> element is clicked = checkbox-wrapper, radio-wrapper 
it checks the input that's tied to it */
.checkbox-wrapper input + label::after, .radio-wrapper input + label::after {
    content: none;
}
/* <""> = empty text & all of the other styles defined earlier will take effect */
.checkbox-wrapper input:checked +label::after, .radio-wrapper input:checked + label::after {
    content: "";
}
/* Hero Style End */

/* "What We Do" Start */
.intro p {
    line-height: 1.7;
    color: #39a6b2;
    width: 80%;
    font-size: 20px;
    margin: 0 auto;
    text-align: center;
}
/* "What We Do" Finish */

/* "What You Do" Start */
.steps {
    background: #fce138;
}

.step {
    margin: 50px auto;
    padding-bottom: 50px;
    width: 80%; 
    display: flex;
    flex-wrap: wrap; 
    align-items: center;
    justify-content: space-between;
    border-bottom: 2px solid #39a6b2;
}

/* Add border state based on positioning: parent/child pseudo class */
.step:last-child {
    border-bottom: none;
}

.step h3 {
    color: #024e76;
    font-size: 46px;
    flex: 1 30%;
}

.step-info {
    flex: 2 70%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.step-img {
    flex: 1 12%;
    margin-right: 20px;
    max-width: 100%;
}

.step-text {
    flex: 12;
}

.step-text h4 {
    font-size: 26px;
    line-height: 1.5;
    color: #024e76;
}

.step-text p {
    color: #39a6b2;
    font-size: 18px;
}

/* "What You Do" Finish */

/* "Meet The Trainers" Start */

.trainers {
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

.trainer {
    margin: 20px;
    background: #024e76;
    color: #fce138;
    flex: 1;
}

.trainer img {
    width: 100%;
}

.trainer-bio {
    padding: 25px;
    line-height: 1.3;
}

.trainer-bio h3 {
    font-size: 28px;
}

.trainer-bio h4 {
    font-weight: lighter;
    font-size: 22px;
    margin-bottom: 15px;
}

.trainer-bio p {
    font-size: 17px;
}
/* "Meet The Trainers" Finish */

/* "Reach Out" Start */
.contact {
    background: #024e76;
}

.contact h2 {
    color: #fce138;
}

.contact-info {
    display: flex;
    justify-content:space-between;
    flex-wrap: wrap;
}
 /* "*" selector = select all elements that are direct children of anything with class <contact-info> */
    /* ">" symbol = look specifically for direct children of the element listed first */
.contact-info > * {
    flex: 1;
    margin: 15px;
}

.contact-info iframe {
    height: 400px;
}
.contact-info div {
    color: white;
}

.contact-info h3 {
    color: #fce138;
    font-size: 32px;
}

.contact-info p,
.contact-info address {
    margin: 20px 0;
    line-height: 1.5;
    font-size: 15px;
    font-style: normal;
}

.contact-info a {
    color:#fce138;
}

.contact-form input, .contact-form textarea {
     border: 1px solid #024e76;
     display: block;
     padding: 7px 15px;
     font-size: 16px;
     color: #024e76;
     width: 100%;
     margin-bottom: 15px;
     margin-top: 5px;
     /* add rounded corners to contact form input boxes */
     border-radius: 10px;
     /* add a transparent background here */
     background-color:rgba(255, 255, 255, 0.75);
} 

/* to add full opaqueness when input is in focus */
.contact-form input:focus, .contact-form textarea:focus {
    background-color: rgba(255, 255, 255, 1);
    outline: none;
}
.contact-form button {
    width: 100%;
    border: none;
    background: #fce138;
    color: #024e76;
    text-align: center;
    padding: 15px 0;
    font-size: 16px;
    /* add rounded corners to contact-form button*/
    border-radius: 10px; 
}

/* Add hover effect to Contact form button */
.contact-form button:hover {
    color:#fce138;
    background: #39a6b2;
}
/* "Reach Out" Finish */

/* MEDIA QUERY FOR SMALLER DESKTOP SCREENS AND SMALLER*/
/* Always put media queries lass in CSS style sheets */
/* ORDER MATTERS! - put biggest screen size first & work downward */
/* max-width values = breakpoints (commmon: 980px, 768px, 575px) */
@media screen and (max-width: 980px) {
    header {
        padding-bottom: 0;
        justify-content: center;
        /* to undo stickiness for smaller screen sizes */
        /* sticky header covers up too much space */
        position: relative;
    }
    header h1 {
        width: 100%;
        text-align: center;
    }
    header nav ul {
        margin-top: 20px;
        width: 100%;
        justify-content: center;
    }
    header nav ul li a {
        font-size: 20px;
    }
    footer h2, footer div {
        text-align: center;
        width: 100%;
    }
    .hero-cta, .hero-form {
        width: 100%;
    }
    .hero-cta {
        text-align: center;
    }
    .section-title {
        width: 80%;
    }
    .trainer {
        flex: 0 70%;
    }
    .contact-info iframe{
        flex: 1 100%;
    }
}

/* MEDIA QUERY FOR TABLETS AND SMALLER */
@media screen and (max-width: 768px) {
    /* To give each <section> element more space */
    section {
        padding: 30px 15px;
    }
    /* WHAT-YOU-DO <section>
    - to allow each flex child to occupy full width of page */
    .step h3 {
        flex: 1 100%;
        text-align: center;
    }
    .step-info {
        flex: 2 100%;
        text-align: center;
        justify-content: center;
    }
    /* Capped icon at 32% & not take up any extra unused space by making flex-grow=0 */
    .step-img {
        flex: 0 32%;
        margin-right: 0;
        margin-top: 15px;
        margin-bottom: 15px;
    }
    .step-text {
        flex: 100%;
    }
}

/* MEDIA QUERY FOR MOBILE PHONES AND SMALLER */
/* BEST PRACTICE to take mobile-first approach
 when STARTING NEW SITE FROM SCRATCH,
use min-width values instead of max-width ones */
@media screen and (max-width: 575px) {
    /* to make hero-form button full width*/
    .hero-form button {
        width: 100%;
    }

    /* to take up 95% of window width */
    .section-title {
        width: 95%;
    }
    .intro p {
        width: 100%;
    }
    /* to give trainer cards more horizontal space */
    .trainer {
        flex: 0 100%;
    }
    /* to allow all 3 flex children to be full-width */
    .contact-info {
        text-align: center;
    }
    /* "*" selector = select all elements 
    that are direct children of anything with class <contact-info> */
    /* ">" symbol = look specifically for direct children 
    of the element listed first */
    .contact-info > * {
        flex: 0 100%;
    }
    /* to change order of divisions in REACH-OUT section */
    /* <contact-form> will be moved to to 3rd place */
    /* order property can rearrange how child elements appear on a page
    without moving the HTML */
    .contact-form {
        order: 3;
    }
} 